import os
import time
from dotenv import load_dotenv
from payment_processor import PaymentProcessor
from qr_generator import QRCodeGenerator

load_dotenv()

def main():
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π...")
    
    try:
        payment_processor = PaymentProcessor()
        qr_generator = QRCodeGenerator()
        
        print("‚úÖ –ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print(f"üè¶ –ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞: {payment_processor.wallet_address}")
        
        print("\nüí≥ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Ñ–æ—Ä–º—ã...")
        payment_form = payment_processor.create_payment_form(
            amount=1.0,
            currency="USDT",
            description="–¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂"
        )
        
        print(f"‚úÖ –ü–ª–∞—Ç–µ–∂–Ω–∞—è —Ñ–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∞:")
        print(f"   ID: {payment_form['form_id']}")
        print(f"   –ó–∞–ø—Ä–æ—à–µ–Ω–Ω–∞—è —Å—É–º–º–∞: {payment_form.get('original_amount', 1.0)} {payment_form['currency']}")
        print(f"   –ö –¥–æ–ø–ª–∞—Ç–µ: {payment_form['amount']} {payment_form['currency']}")
        print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {payment_form['description']}")
        print(f"   –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –¥–æ: {payment_form['expires_at']}")
        
        print("\nüì± –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR-–∫–æ–¥–∞...")
        qr_data = payment_processor.generate_payment_qr_data(payment_form['form_id'])
        qr_bytes = qr_generator.generate_qr_code(qr_data)
        
        if qr_bytes:
            qr_filename = f"payment_{payment_form['form_id'][:8]}.png"
            qr_filepath = qr_generator.generate_qr_code_in_folder(qr_data, qr_filename)
            if qr_filepath:
                print(f"‚úÖ QR-–∫–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {qr_filepath}")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ QR-–∫–æ–¥–∞")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞")
        
        def on_payment_received(transaction, form_id):
            print(f"\nüéâ –ü–õ–ê–¢–ï–ñ –ü–û–õ–£–ß–ï–ù!")
            print(f"   –°—É–º–º–∞: {transaction['amount']} {transaction['currency']}")
            print(f"   –û—Ç: {transaction['from_address']}")
            print(f"   ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction['transaction_id']}")
        
        payment_processor.register_payment_callback(
            payment_form['form_id'], 
            on_payment_received
        )
        
        print("\nüëÄ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–ª–∞—Ç–µ–∂–µ–π...")
        payment_processor.start_monitoring(check_interval=10)
        
        print("\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –æ–ø–ª–∞—Ç—ã:")
        print(f"   –ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞: {payment_processor.wallet_address}")
        print(f"   –ö –¥–æ–ø–ª–∞—Ç–µ: {payment_form['amount']} {payment_form['currency']}")
        print(f"   QR-–∫–æ–¥: {qr_filepath if qr_filepath else '–ù–µ —Å–æ–∑–¥–∞–Ω'}")
        print(f"   QR –¥–∞–Ω–Ω—ã–µ: {qr_data}")
        
        print("\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞... (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)")
        
        try:
            while True:
                status = payment_processor.check_payment_status(payment_form['form_id'])
                print(f"   –°—Ç–∞—Ç—É—Å: {status['status']}")
                
                if status['status'] == 'paid':
                    print("‚úÖ –ü–ª–∞—Ç–µ–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!")
                    break
                elif status['status'] == 'expired':
                    print("‚ùå –ü–ª–∞—Ç–µ–∂–Ω–∞—è —Ñ–æ—Ä–º–∞ –∏—Å—Ç–µ–∫–ª–∞")
                    break
                
                time.sleep(30)
                
        except KeyboardInterrupt:
            print("\nüëã –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        
        payment_processor.stop_monitoring()
        print("‚úÖ –ú–æ–¥—É–ª—å –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return 1
    
    return 0

if __name__ == "__main__":
    exit(main())
